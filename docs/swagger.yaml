definitions:
  db.Contact:
    properties:
      contact_id:
        type: integer
      created_at:
        $ref: '#/definitions/pgtype.Timestamp'
      first_name:
        type: string
      last_name:
        type: string
      phone_number:
        type: string
      street:
        type: string
      updated_at:
        $ref: '#/definitions/pgtype.Timestamp'
    type: object
  pgtype.InfinityModifier:
    enum:
    - 1
    - 0
    - -1
    type: integer
    x-enum-varnames:
    - Infinity
    - Finite
    - NegativeInfinity
  pgtype.Timestamp:
    properties:
      infinityModifier:
        $ref: '#/definitions/pgtype.InfinityModifier'
      time:
        description: Time zone will be ignored when encoding to PostgreSQL.
        type: string
      valid:
        type: boolean
    type: object
  schemas.CreateContact:
    properties:
      first_name:
        type: string
      last_name:
        type: string
      phone_number:
        type: string
      street:
        type: string
    required:
    - first_name
    - last_name
    - phone_number
    - street
    type: object
  schemas.UpdateContact:
    properties:
      first_name:
        type: string
      last_name:
        type: string
      phone_number:
        type: string
      street:
        type: string
    type: object
info:
  contact: {}
  title: Go Gin Test Api
  version: "1.0"
paths:
  /contacts:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/db.Contact'
            type: array
      summary: Get all contacts
      tags:
      - contacts
    post:
      consumes:
      - application/json
      parameters:
      - description: Create contact
        in: body
        name: contact
        required: true
        schema:
          $ref: '#/definitions/schemas.CreateContact'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/db.Contact'
      summary: Create new contact
      tags:
      - contacts
  /contacts/{contactId}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: Contact Id
        in: path
        name: contactId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No Content
      summary: Delete contact by id
      tags:
      - contacts
    get:
      consumes:
      - application/json
      parameters:
      - description: Contact Id
        in: path
        name: contactId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/db.Contact'
      summary: Get contact by id
      tags:
      - contacts
    patch:
      consumes:
      - application/json
      parameters:
      - description: Contact Id
        in: path
        name: contactId
        required: true
        type: integer
      - description: Update contact
        in: body
        name: contact
        required: true
        schema:
          $ref: '#/definitions/schemas.UpdateContact'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/db.Contact'
      summary: Update contact
      tags:
      - contacts
swagger: "2.0"
