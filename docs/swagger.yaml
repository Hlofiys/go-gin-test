basePath: /api/
definitions:
  db.Contact:
    properties:
      contact_id:
        type: integer
      created_at:
        type: string
      first_name:
        type: string
      last_name:
        type: string
      phone_number:
        type: string
      street:
        type: string
      updated_at:
        type: string
    type: object
  schemas.CreateContact:
    properties:
      first_name:
        type: string
      last_name:
        type: string
      phone_number:
        type: string
      street:
        type: string
    required:
    - first_name
    - last_name
    - phone_number
    - street
    type: object
host: localhost:8000
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is a sample server celler server.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Swagger Example API
  version: "1.0"
paths:
  /contacts:
    post:
      consumes:
      - application/json
      description: add by json contact
      parameters:
      - description: Create contact
        in: body
        name: contact
        required: true
        schema:
          $ref: '#/definitions/schemas.CreateContact'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/db.Contact'
      summary: Create new contact
      tags:
      - contacts
securityDefinitions:
  ApiKeyAuth:
    description: Description for what is this security definition being used
    in: header
    name: Authorization
    type: apiKey
  BasicAuth:
    type: basic
  OAuth2AccessCode:
    authorizationUrl: https://example.com/oauth/authorize
    flow: accessCode
    scopes:
      admin: ""
    tokenUrl: https://example.com/oauth/token
    type: oauth2
  OAuth2Application:
    flow: application
    scopes:
      admin: Grants read and write access to administrative information
      write: Grants write access
    tokenUrl: https://example.com/oauth/token
    type: oauth2
  OAuth2Implicit:
    authorizationUrl: https://example.com/oauth/authorize
    flow: implicit
    scopes:
      admin: Grants read and write access to administrative information
      write: Grants write access
    type: oauth2
  OAuth2Password:
    flow: password
    scopes:
      admin: Grants read and write access to administrative information
      read: Grants read access
      write: Grants write access
    tokenUrl: https://example.com/oauth/token
    type: oauth2
swagger: "2.0"
